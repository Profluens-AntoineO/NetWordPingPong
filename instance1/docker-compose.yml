services:
  # Service Backend (Python/Flask)
  backend:
    build: ../backend
    ports:
      # Mappe le port 5000 du conteneur au port 5000 de la machine hôte
      - "192.168.1.200:5000:5000"
    environment:
      # ====================================================================
      # MODIFICATION MANUELLE REQUISE
      # Remplacez "localhost" par l'adresse IP de votre machine
      # sur le réseau local (ex: 192.168.1.50).
      # ====================================================================
      - OWN_HOST=192.168.1.200
      - OWN_PORT=5000
      - NETMASK_CIDR=24
    networks:
      - pong-net
    healthcheck:
      # Commande à exécuter à l'intérieur du conteneur pour vérifier sa santé.
      # curl -f échoue avec un code d'erreur si le statut HTTP n'est pas 2xx.
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 10s   # Vérifie toutes les 10 secondes.
      timeout: 5s     # Considère la vérification comme échouée après 5 secondes.
      retries: 5      # Fait 5 tentatives avant de marquer le conteneur comme "unhealthy".
      start_period: 20s # Donne 20 secondes au conteneur pour démarrer avant de commencer les checks.

  # Service Frontend (Nginx)
  frontend:
    build: ../frontend
    ports:
      # Mappe le port 80 du conteneur au port 8080 de la machine hôte
      # On utilise 8080 pour éviter les conflits si un autre service utilise le port 80
      - "192.168.1.200:8080:80"
    depends_on:
      - backend # S'assure que le backend est démarré avant le frontend
    networks:
      - pong-net

networks:
  pong-net:
    driver: macvlan
    driver_opts:
      parent: enp3s0
    ipam:
      driver: default
